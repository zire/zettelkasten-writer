#!/bin/bash

# Zettelkasten Writer - Master Workflow Orchestration
# Your unified writing command center

set -e

# Get script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Load all library functions
source "$SCRIPT_DIR/lib/menu.sh"
source "$SCRIPT_DIR/lib/frontmatter.sh"  
source "$SCRIPT_DIR/lib/editor.sh"
source "$SCRIPT_DIR/lib/publish.sh"
source "$SCRIPT_DIR/lib/session.sh"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

# Handle command line arguments for quick commands
case "${1:-}" in
    "save")
        if [ -n "$2" ]; then
            save_draft_progress "$2"
        else
            echo -e "${RED}Usage: $0 save \"Post Title\"${NC}"
        fi
        exit 0
        ;;
    "publish")
        if [ -n "$2" ]; then
            publish_post "$2"
        else
            echo -e "${RED}Usage: $0 publish \"Post Title\"${NC}"
        fi
        exit 0
        ;;
    "status")
        show_header
        echo -e "${BLUE}üìä All Drafts Status:${NC}"
        echo ""
        get_dsc_drafts
        exit 0
        ;;
    "help"|"--help"|"-h")
        show_header
        echo -e "${BLUE}üîß Quick Commands:${NC}"
        echo -e "  ${GREEN}$0${NC}              - Interactive writing session"
        echo -e "  ${GREEN}$0 save \"Title\"${NC}   - Save draft progress"  
        echo -e "  ${GREEN}$0 publish \"Title\"${NC} - Publish completed post"
        echo -e "  ${GREEN}$0 status${NC}         - Show all drafts"
        echo ""
        echo -e "${PURPLE}üí° For the full interactive experience, just run: $0${NC}"
        exit 0
        ;;
esac

# Main interactive loop
main_loop() {
    local current_site=""
    local site_name=""
    
    while true; do
        show_header
        
        if [ -z "$current_site" ]; then
            # Site selection menu
            show_site_menu
            read -r choice
            
            case "$choice" in
                1)
                    current_site="dsc"
                    site_name="Digital Sovereignty Chronicle"
                    ;;
                2|3|4)
                    echo -e "${YELLOW}‚ö†Ô∏è  This site is coming soon!${NC}"
                    echo -ne "${BLUE}Press any key to continue...${NC}"
                    read -r
                    continue
                    ;;
                q|quit|exit)
                    echo -e "${GREEN}üëã Happy writing!${NC}"
                    exit 0
                    ;;
                *)
                    echo -e "${RED}Invalid choice${NC}"
                    echo -ne "${BLUE}Press any key to continue...${NC}"
                    read -r
                    continue
                    ;;
            esac
        else
            # Action menu for selected site
            show_action_menu "$site_name"
            read -r action
            
            case "$action" in
                n|new)
                    echo -e "${BLUE}‚ú® Creating new post...${NC}"
                    echo ""
                    
                    # Create new post with frontmatter wizard
                    if create_dsc_frontmatter; then
                        post_file="$POST_FILE_RESULT"
                        echo ""
                        echo -ne "${PURPLE}Open in Cursor now? [Y/n]:${NC} "
                        read -r open_choice
                        
                        if [[ ! "$open_choice" =~ ^[Nn]$ ]]; then
                            open_in_cursor "$post_file"
                            show_writing_session_commands
                            echo ""
                            echo -ne "${BLUE}Press any key when done writing...${NC}"
                            read -r
                        fi
                    else
                        echo -ne "${BLUE}Press any key to continue...${NC}"
                        read -r
                    fi
                    ;;
                    
                e|edit)
                    echo -e "${BLUE}üìù Select draft to edit...${NC}"
                    echo ""
                    
                    if post_file=$(select_draft "edit"); then
                        # post_file now contains the direct path to the file
                        if [ -f "$post_file" ]; then
                            open_in_cursor "$post_file"
                            show_writing_session_commands
                            show_session_end_options
                            read -r session_choice
                            
                            case "$session_choice" in
                                s|save)
                                    local title=$(grep 'title:' "$post_file" | sed 's/title: "//' | sed 's/"//' | head -1)
                                    save_draft_progress "$title"
                                    end_writing_session
                                    ;;
                                p|publish)
                                    local title=$(grep 'title:' "$post_file" | sed 's/title: "//' | sed 's/"//' | head -1)
                                    publish_post "$title"
                                    end_writing_session
                                    ;;
                                c|continue)
                                    echo -e "${BLUE}üí° Keep writing! Theme remains active.${NC}"
                                    echo -ne "${BLUE}Press any key to continue...${NC}"
                                    read -r
                                    ;;
                                q|quit|*)
                                    end_writing_session
                                    ;;
                            esac
                        else
                            echo -e "${RED}‚ùå Could not find post file: $post_file${NC}"
                            echo -ne "${BLUE}Press any key to continue...${NC}"
                            read -r
                        fi
                    fi
                    ;;
                    
                p|publish)
                    echo -e "${BLUE}üöÄ Select post to publish...${NC}"
                    echo ""
                    
                    if post_file=$(select_completed); then
                        # Extract title from the selected post file
                        local title=$(grep 'title:' "$post_file" | sed 's/title: "//' | sed 's/"//' | head -1)
                        publish_post "$title"
                        echo ""
                        echo -ne "${BLUE}Press any key to continue...${NC}"
                        read -r
                    fi
                    ;;
                    
                d|delete)
                    echo -e "${RED}üóëÔ∏è  Select draft to delete...${NC}"
                    echo ""
                    
                    if post_dir=$(select_draft_for_deletion); then
                        delete_draft "$post_dir"
                        echo ""
                        echo -ne "${BLUE}Press any key to continue...${NC}"
                        read -r
                    fi
                    ;;
                    
                b|back)
                    current_site=""
                    site_name=""
                    continue
                    ;;
                    
                q|quit|exit)
                    echo -e "${GREEN}üëã Happy writing!${NC}"
                    exit 0
                    ;;
                    
[a-z])
                    # Direct completed post selection by letter
                    echo -e "${BLUE}üöÄ Publishing completed post $action...${NC}"
                    echo ""
                    
                    # Get the list of completed posts and select by letter
                    local completed=()
                    while IFS= read -r line; do
                        if [ -n "$line" ]; then
                            completed+=("$line")
                        fi
                    done < <(get_dsc_completed)
                    
                    # Convert letter to index (a=0, b=1, etc.)
                    local letter_idx=$(($(printf "%d" "'$action") - 97))
                    
                    if [ "$letter_idx" -ge 0 ] && [ "$letter_idx" -lt ${#completed[@]} ]; then
                        local selected_post="${completed[$letter_idx]}"
                        IFS='|' read -r num title date word_count icon post_dir <<< "$selected_post"
                        local post_file="$post_dir/index.md"
                        
                        if [ -f "$post_file" ]; then
                            local title_for_publish=$(grep 'title:' "$post_file" | sed 's/title: "//' | sed 's/"//' | head -1)
                            publish_post "$title_for_publish"
                            echo ""
                            echo -ne "${BLUE}Press any key to continue...${NC}"
                            read -r
                        else
                            echo -e "${RED}‚ùå Could not find post file: $post_file${NC}"
                            echo -ne "${BLUE}Press any key to continue...${NC}"
                            read -r
                        fi
                    else
                        echo -e "${RED}‚ùå Invalid completed post selection: $action${NC}"
                        echo -ne "${BLUE}Press any key to continue...${NC}"
                        read -r
                    fi
                    ;;
                    
                *)
                    # Check if it's a number for direct draft selection
                    if [[ "$action" =~ ^[0-9]+$ ]]; then
                        # Direct draft selection by number
                        echo -e "${BLUE}üìù Opening draft $action...${NC}"
                        echo ""
                        
                        # Get the list of drafts and select the nth one
                        local drafts=()
                        while IFS= read -r line; do
                            if [ -n "$line" ]; then
                                drafts+=("$line")
                            fi
                        done < <(get_dsc_drafts)
                        
                        if [ "$action" -le ${#drafts[@]} ] && [ "$action" -ge 1 ]; then
                            local selected_draft="${drafts[$((action-1))]}"
                            IFS='|' read -r num title date word_count icon post_dir <<< "$selected_draft"
                            local post_file="$post_dir/index.md"
                            
                            if [ -f "$post_file" ]; then
                                open_in_cursor "$post_file"
                                show_writing_session_commands
                                show_session_end_options
                                read -r session_choice
                                
                                case "$session_choice" in
                                    s|save)
                                        local title=$(grep 'title:' "$post_file" | sed 's/title: "//' | sed 's/"//' | head -1)
                                        save_draft_progress "$title"
                                        end_writing_session
                                        ;;
                                    p|publish)
                                        local title=$(grep 'title:' "$post_file" | sed 's/title: "//' | sed 's/"//' | head -1)
                                        publish_post "$title"
                                        end_writing_session
                                        ;;
                                    c|continue)
                                        echo -e "${BLUE}üí° Keep writing! Theme remains active.${NC}"
                                        echo -ne "${BLUE}Press any key to continue...${NC}"
                                        read -r
                                        ;;
                                    q|quit|*)
                                        end_writing_session
                                        ;;
                                esac
                            else
                                echo -e "${RED}‚ùå Could not find post file: $post_file${NC}"
                                echo -ne "${BLUE}Press any key to continue...${NC}"
                                read -r
                            fi
                        else
                            echo -e "${RED}‚ùå Invalid draft number: $action (valid range: 1-${#drafts[@]})${NC}"
                            echo -ne "${BLUE}Press any key to continue...${NC}"
                            read -r
                        fi
                    else
                        echo -e "${RED}Invalid choice${NC}"
                        echo -ne "${BLUE}Press any key to continue...${NC}"
                        read -r
                    fi
                    ;;
            esac
        fi
    done
}

# Start the interactive session
main_loop